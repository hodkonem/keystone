services:
  config-server:
    build:
      context: .
      dockerfile: config-server/Dockerfile
    ports:
      - "8888:8888"
    volumes:
      - ~/.ssh:/home/javauser/.ssh:ro
      - config-repo:/tmp/config-repo
    environment:
      - GIT_KNOWN_HOSTS=/home/javauser/.ssh/known_hosts
      - SPRING_PROFILES_ACTIVE=docker
      - GIT_SSH_COMMAND=ssh -i /home/javauser/.ssh/id_rsa -o StrictHostKeyChecking=no
      - SPRING_CLOUD_CONFIG_SERVER_GIT_URI=${CONFIG_GIT_URI:-git@github.com:hodkonem/mercury.git}
      - SERVER_PORT=${CONFIG_PORT:-8888}
    networks:
      - microservices-net
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:${SERVER_PORT}/actuator/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

  eureka-server:
    build:
      context: .
      dockerfile: eureka-server/Dockerfile
    ports:
      - "${EUREKA_PORT:-8761}:${EUREKA_PORT:-8761}"
    depends_on:
      config-server:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${EUREKA_PORT:-8761}/actuator/health" ]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - microservices-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=${EUREKA_PORT:-8761}

  auth-service:
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    expose:
      - "${AUTH_PORT:-8082}"
    depends_on:
      - eureka-server
      - config-server
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:${AUTH_PORT:-8082}/actuator/health || exit 1" ]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - microservices-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=${AUTH_PORT:-8082}

  notification-service:
    build:
      context: .
      dockerfile: notification/Dockerfile
    expose:
      - "${NOTIFICATION_PORT:-8083}"
    depends_on:
      - eureka-server
      - config-server
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:${NOTIFICATION_PORT:-8083}/actuator/health || exit 1" ]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - microservices-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=${NOTIFICATION_PORT:-8083}

  order-service:
    build:
      context: .
      dockerfile: order/Dockerfile
    expose:
      - "${ORDER_PORT:-8084}"
    depends_on:
      - eureka-server
      - config-server
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:${ORDER_PORT:-8084}/actuator/health || exit 1" ]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - microservices-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=${ORDER_PORT:-8084}

  product-service:
    build:
      context: .
      dockerfile: product/Dockerfile
    expose:
      - "${PRODUCT_PORT:-8085}"
    depends_on:
      - eureka-server
      - config-server
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:${PRODUCT_PORT:-8085}/actuator/health || exit 1" ]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - microservices-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=${PRODUCT_PORT:-8085}

  gateway:
    build:
      context: .
      dockerfile: gateway/Dockerfile
    ports:
      - "${GATEWAY_PORT:-8080}:${GATEWAY_PORT:-8080}"
    depends_on:
      - eureka-server
      - config-server
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:${GATEWAY_PORT:-8080}/actuator/health || exit 1" ]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - microservices-net
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=${GATEWAY_PORT:-8080}

networks:
  microservices-net:
    driver: bridge

volumes:
  config-repo:  # Должен быть на том же уровне, что и networks